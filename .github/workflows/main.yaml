on:
  - push
jobs:
  build:
    name: Build
    strategy:
      matrix:
        platform:
          - macos-latest
          - ubuntu-latest
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Set up Go 1.14
        uses: actions/setup-go@v2.1.4
        with:
          go-version: 1.14
        id: go
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2.1.0
      - name: Make
        run: make continuous-integration
      - name: Upload artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: ${{ runner.os }}
          path: plugin
  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') && contains(github.ref, '.')
    steps:
      - name: Create Release
        uses: actions/create-release@v1.0.1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
      - name: Download macOS Artifact
        uses: actions/download-artifact@v1.0.0
        with:
          name: macOS
      - name: Upload macOS Release Asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./macOS/plugin
          asset_name: plugin-darwin-amd64
          asset_content_type: application/octet-stream
      - name: Download Linux Artifact
        uses: actions/download-artifact@v1.0.0
        with:
          name: Linux
      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Linux/plugin
          asset_name: plugin-linux-amd64
          asset_content_type: application/octet-stream
