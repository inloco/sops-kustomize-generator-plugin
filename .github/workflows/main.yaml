on:
  - push
jobs:
  build:
    name: Build
    strategy:
      matrix:
        platform:
          - macos-latest
          - ubuntu-latest
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Set up Go 1.14
        uses: actions/setup-go@v2.1.4
        with:
          go-version: 1.14
        id: go
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2.1.0
      - name: Make
        run: make continuous-integration
      - name: Upload artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: ${{ runner.os }}
          path: plugin
  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') && contains(github.ref, '.')
    outputs:
      upload-url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        uses: actions/create-release@v1.1.4
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
  publish_plugin:
    name: Publish Plugin
    needs: release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os:
          - name: macOS
            kernel: darwin
          - name: Linux
            kernel: linux
    steps:
      - name: Download ${{ matrix.os.name }} Artifact
        uses: actions/download-artifact@v1.0.0
        with:
          name: ${{ matrix.os.name }}
      - name: Upload ${{ matrix.os.name }} Release Asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload-url }}
          asset_path: ./${{ matrix.os.name }}/plugin
          asset_name: plugin-${{ matrix.os.kernel }}-amd64
          asset_content_type: application/octet-stream
  publish_script:
    name: Publish Script
    needs: publish_plugin
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into directory
        uses: actions/checkout@v2.3.4
      - name: Update Git Tag
        run: sed 's/v0.0.0/${{ github.ref }}/g' -i ./hack/install.sh
      - name: Upload script Release Asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload-url }}
          asset_path: ./hack/install.sh
          asset_name: install.sh
          asset_content_type: text/plain
